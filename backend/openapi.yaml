openapi: 3.0.0
info:
  title: Chat Service API
  description: API for interacting with a chat service
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /ping:
    get:
      summary: Ping the chat service
      responses:
        '200':
          description: Successful response
        '500':
          description: Internal server error
  /auth/login:
    post:
      summary: Log in to the chat service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
        '500':
          description: Internal server error
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  // define the properties of the response if needed
        '500':
          description: Internal server error
  /auth/allusers/{id}:
    get:
      summary: Get all users or a specific user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Internal server error
  /auth/setAvatar/{id}:
    post:
      summary: Set user avatar
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                // define the properties of the response if needed
        '500':
          description: Internal server error
  /auth/logout/{id}:
    get:
      summary: Log out a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: Successful logout
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '500':
          description: Internal server error
components:
  schemas:
    User:
      type: object
      properties:
        // define the properties of the user object
